{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww18700\viewh19880\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 SELECT 1.0 * \
(\
  SELECT COUNT(*)\
  FROM subscriptions\
  WHERE subscription_start < '2017-01-01'\
  AND (\
    subscription_end\
    BETWEEN '2017-01-01'\
    AND '2017-01-31'\
  )\
) / (\
  SELECT COUNT(*) \
  FROM subscriptions \
  WHERE subscription_start < '2017-01-01'\
  AND (\
    (subscription_end >= '2017-01-01')\
    OR (subscription_end IS NULL)\
  )\
) \
AS result;\
\
\
\
WITH enrollments AS \
(SELECT *\
FROM subscriptions\
WHERE subscription_start < '2017-01-01'\
AND (\
  (subscription_end >= '2017-01-01')\
  OR (subscription_end IS NULL)\
)),\
status AS \
(SELECT \
CASE\
  WHEN (subscription_end > '2017-01-31')\
    OR (subscription_end IS NULL) THEN 0\
  ELSE 1\
  END as is_canceled,\
CASE\
  WHEN (subscription_start < '2017-01-01')\
    AND (\
      (subscription_end >= '2017-01-01')\
        OR (subscription_end IS NULL)\
    ) THEN 1\
    ELSE 0\
  END as is_active\
FROM enrollments\
)\
SELECT 1.0 * SUM(is_canceled)/SUM(is_active) FROM status;\
\
\
\
WITH months AS (\
  SELECT \
    '2017-01-01' AS first_day, \
    '2017-01-31' AS last_day \
  UNION \
  SELECT \
    '2017-02-01' AS first_day, \
    '2017-02-28' AS last_day \
  UNION \
  SELECT \
    '2017-03-01' AS first_day, \
    '2017-03-31' AS last_day\
), \
cross_join AS (\
  SELECT *\
  FROM subscriptions\
  CROSS JOIN months\
), \
status AS (\
  SELECT \
    id, \
    first_day AS month, \
    CASE\
      WHEN (subscription_start < first_day) \
        AND (\
          subscription_end > first_day \
          OR subscription_end IS NULL\
        ) THEN 1\
      ELSE 0\
    END AS is_active, \
    CASE\
      WHEN subscription_end BETWEEN first_day AND last_day THEN 1\
      ELSE 0\
    END AS is_canceled \
  FROM cross_join\
), \
status_aggregate AS (\
  SELECT \
    month, \
    SUM(is_active) AS active, \
    SUM(is_canceled) AS canceled \
  FROM status \
  GROUP BY month\
) \
SELECT\
  month, \
  1.0 * canceled / active AS churn_rate \
FROM status_aggregate;}